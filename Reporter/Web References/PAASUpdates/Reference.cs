//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Microarea.Mago4Butler.Reporter.PAASUpdates {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportServiceSoap", Namespace="http://www.microarea.it/PAASUpdates/")]
    public partial class ReportService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback StoreReportDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ReportService() {
            this.Url = global::Microarea.Mago4Butler.Reporter.Properties.Settings.Default.Microarea_Mago4Butler_Reporter_PAASUpdates_ReportService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event StoreReportDataCompletedEventHandler StoreReportDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.microarea.it/PAASUpdates/StoreReportData", RequestNamespace="http://www.microarea.it/PAASUpdates/", ResponseNamespace="http://www.microarea.it/PAASUpdates/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StoreReportData(ReportData reportData) {
            this.Invoke("StoreReportData", new object[] {
                        reportData});
        }
        
        /// <remarks/>
        public void StoreReportDataAsync(ReportData reportData) {
            this.StoreReportDataAsync(reportData, null);
        }
        
        /// <remarks/>
        public void StoreReportDataAsync(ReportData reportData, object userState) {
            if ((this.StoreReportDataOperationCompleted == null)) {
                this.StoreReportDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreReportDataOperationCompleted);
            }
            this.InvokeAsync("StoreReportData", new object[] {
                        reportData}, this.StoreReportDataOperationCompleted, userState);
        }
        
        private void OnStoreReportDataOperationCompleted(object arg) {
            if ((this.StoreReportDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreReportDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1067.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.microarea.it/PAASUpdates/")]
    public partial class ReportData {
        
        private string machineNameField;
        
        private string oSVersionField;
        
        private string netFxVersionField;
        
        private string senderField;
        
        private string exceptionField;
        
        /// <remarks/>
        public string MachineName {
            get {
                return this.machineNameField;
            }
            set {
                this.machineNameField = value;
            }
        }
        
        /// <remarks/>
        public string OSVersion {
            get {
                return this.oSVersionField;
            }
            set {
                this.oSVersionField = value;
            }
        }
        
        /// <remarks/>
        public string NetFxVersion {
            get {
                return this.netFxVersionField;
            }
            set {
                this.netFxVersionField = value;
            }
        }
        
        /// <remarks/>
        public string Sender {
            get {
                return this.senderField;
            }
            set {
                this.senderField = value;
            }
        }
        
        /// <remarks/>
        public string Exception {
            get {
                return this.exceptionField;
            }
            set {
                this.exceptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StoreReportDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591